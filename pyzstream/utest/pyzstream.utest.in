#!/usr/bin/env bash
#
# pyzstream test runner

projbindir=@PROJECT_BINARY_DIR@
srcdir=@CMAKE_CURRENT_SOURCE_DIR@
bindir=@CMAKE_CURRENT_BINARY_DIR@

# build directory that contains pyzstream .so
pyzstream_libdir=${projbindir}/pyzstream

export PYTHONPATH=${pyzstream_libdir}:${PYTHONPATH}

usage() {
    echo "usage: $0 [-i | --interactive] [-h | --help | --usage] ARGS" 1>&2
}

help() {
    usage

    cat <<EOF

with no arguments,  run python unit tests
  
Options:
  -u | --usage         brief help message
  --help               this help message
  -i | --interactive   exec python (interactively) with unittest PYTHONPATH
  --path               print PYTHONPATH to console
  --shell              exec bash (interactively) with unittest PYTHONPATH set

EOF
}

usage_flag=0
help_flag=0
path_flag=0
shell_flag=0
interactive_flag=0

while [[ $# > 0 ]]; do
    case "$1" in
        -i | --interactive)
            interactive_flag=1
            ;;
        --usage)
            usage_flag=1
            ;;
        -h | --help)
            help_flag=1
            ;;
        --path)
            path_flag=1
            ;;
        --shell)
            shell_flag=1
            ;;
        --)
            # forward remaining args to python session
            shift
            break
            ;;
        *)
            usage
            exit 1
            ;;
    esac

    shift
done

if [[ $usage_flag -eq 1 ]]; then
    # usage message only
    echo -n "usage: "
    usage
elif [[ $help_flag -eq 1 ]]; then
    # help message only
    echo -n "help: "
    help
elif [[ $interactive_flag -eq 1 ]]; then
    # interactive python session,  with PYTHONPATH referring to:
    # 1. c++ libraries in build tree
    # 2. python libraries in source tree
    #
    exec python $@
elif [[ $path_flag -eq 1 ]]; then
    echo "PYTHONPATH=${PYTHONPATH}"
elif [[ $shell_flag -eq 1 ]]; then
    # run bash.  environment has modified PYTHONPATH
    exec bash
else
    # python module is cmake-examples/pyzstream/utest,
    # which imports pyzstream_utest
    #
    python -m unittest utest $@
fi

